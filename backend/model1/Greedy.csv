Label,Time,Space,Cyclomatic,Halstead,Composite Metric,Code,Scaled_Time,Scaled_Space,Scaled_Cyclomatic,Scaled_Halstead,Index,Model_Rank,rank_weightedSum_sumNorm_inverse,rank_weightedSum_maxNorm_inverse,rank_weightedProduct_sumNorm_inverse,rank_weightedProduct_maxNorm_inverse
SORT,6.042111958181762,4.224068605678045,1,0.0,-184.4824936021086,def SORT(l:list)->list:\n	l.sort()\n	return l\n,-0.4106638453283604,-0.20732493602108634,-1.2,-0.875,1,3.0,1,1,2,2
SORT,6.712076646321035,4.628196886128023,3,1.0,-115.2824274646932,"def sortArray(l:list)->list:\n    def sortArray(N:list):\n        C, m, M, S = Counter(N), min(N), max(N), []\n        for n in range(m,M+1): S.extend([n]*C[n])\n        return S\n\n\n    return sortArray(l)\n",-0.3364592112132715,-0.040324274646932105,-0.8,-0.625,7,6.0,6,6,6,6
SORT,7.274240684874858,4.590026001387766,5,1.7142857142857142,-67.93121731105205,"def sortArray(l:list)->list:\n    def sortArray(nums:list):\n        count = [0]*100000\n        for num in nums:\n            count[num+50000] += 1 # count the number of times we see the number\n        nums = []\n        for i,counter in enumerate(count):\n            for _ in range(counter):\n                nums.append(i-50000) # this line runs at most n times total\n        return nums\n\n\n    return sortArray(l)\n",-0.2741944716948278,-0.0560978873962348,-0.4,-0.44642857142857145,14,7.0,8,8,8,8
SORT,13.754959486333338,1.0,3,0.0,-277.7128601739243,"def sortArray(l:list)->list:\n    def sortArray(N:list):\n        L = len(N)\n        for i in range(1,L): insort_left(N, N.pop(i), 0, i)\n        return N\n\n\n    return sortArray(l)\n",0.4436036092766192,-1.5396286017392429,-0.8,-0.875,6,1.0,2,2,1,1
